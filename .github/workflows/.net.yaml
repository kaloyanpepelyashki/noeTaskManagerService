name: .NET

on:
  push:
    branches: [main]

jobs:
  Test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: noeTaskManagerService.Primary

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

  build_and_deploy:
    needs: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build and push Docker image to Docker hub
        uses: docker/build-push-action@v5
        with:
          context: ./noeTaskManagerService.Primary
          file: ./noeTaskManagerService.Primary/Dockerfile
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/noetaskmanager-service:latest

      - name: Depoloy to Render
        run: |
          curl -X PATCH \
            https://api.render.com/v1/services/${{secrets.RENDER_SERVICE_ID}} \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"image": "${{secrets.DOCKER_USERNAME}}/noetaskmanager-service:latest"}'

      - name: Cleanup
        if: always()
        run: docker rmi ${{secrets.DOCKER_USERNAME}}/noetaskmanager-service:latest
